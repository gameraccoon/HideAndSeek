#pragma once

#include <vector>
#include <nlohmann/json.hpp>

enum class {enum_name}
{{
	{enum_value}
}};

template <typename T>
StringID get_enum_name();
template <>
StringID get_enum_name<{enum_name}>();

template <typename T>
StringID enum_to_string(T value);

template <typename T>
T string_to_enum(StringID value);

template <typename T>
std::vector<T> get_all_enum_values();

template <typename T>
std::vector<StringID> get_all_enum_value_names();

NLOHMANN_JSON_SERIALIZE_ENUM({enum_name}, {{
	{enum_value_serialization}
}})
