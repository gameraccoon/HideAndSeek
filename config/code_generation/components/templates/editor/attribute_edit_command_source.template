#include "EngineCommon/precomp.h"

#include "Change{class_name}{attribute_name_capital}Command.generated.h"

#include "GameData/Components/{class_name}.generated.h"

#include "src/editorutils/componentreferenceutils.h"

Change{class_name}{attribute_name_capital}Command::Change{class_name}{attribute_name_capital}Command(const ComponentSourceReference& source, const {attribute_type}& old{attribute_name_capital}, const {attribute_type}& new{attribute_name_capital}, bool needToUpdateLayout)
	: EditorCommand(needToUpdateLayout ? EffectBitset(EffectType::ComponentAttributes) : EffectBitset(EffectType::ComponentAttributes, EffectType::SkipLayoutUpdate))
	, mComponentSource(source)
	, mOld{attribute_name_capital}(old{attribute_name_capital})
	, mNew{attribute_name_capital}(new{attribute_name_capital})
{{
}}

void Change{class_name}{attribute_name_capital}Command::doCommand(CommandExecutionContext& context)
{{
	if ({class_name}* component = Utils::GetComponent<{class_name}>(mComponentSource, context.world))
	{{
		component->set{attribute_name_capital}(mNew{attribute_name_capital});
	}}
}}

void Change{class_name}{attribute_name_capital}Command::undoCommand(CommandExecutionContext& context)
{{
	if ({class_name}* component = Utils::GetComponent<{class_name}>(mComponentSource, context.world))
	{{
		component->set{attribute_name_capital}(mOld{attribute_name_capital});
	}}
}}
